plugins {
	id 'org.springframework.boot' version '2.1.5.RELEASE'
	id 'java'
	id 'com.palantir.git-version' version '0.12.2'

}

apply plugin: 'io.spring.dependency-management'

group = 'com.example'
sourceCompatibility = '1.8'

version gitVersion()
def details = versionDetails()
println(details.gitHash)
ant.replaceregexp(match:'public String versionHash = ".*";', replace: "public String versionHash = \"$details.gitHash\";", flags:'g', byline:true) {
	fileset(dir: "$rootDir/src/main/java/lab13/controller", includes: 'VersionController.java')
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-web-services'
	implementation 'org.springframework.session:spring-session-core'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	compile group: 'org.postgresql', name: 'postgresql', version: '42.1.4'


}

